{"ast":null,"code":"import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nconst useStore = create(persist((set, get) => ({\n  // Cart state\n  cart: [],\n  cartTotal: 0,\n  // Product view preferences\n  viewMode: 'grid',\n  // 'grid' or 'list'\n\n  // Search and filters\n  searchQuery: '',\n  selectedCategory: 'all',\n  priceRange: [0, 25000],\n  sortBy: 'name',\n  // Add to cart\n  addToCart: (product, quantity = 1) => {\n    const {\n      cart\n    } = get();\n    const existingItem = cart.find(item => item.id === product.id);\n    if (existingItem) {\n      set({\n        cart: cart.map(item => item.id === product.id ? {\n          ...item,\n          quantity: item.quantity + quantity\n        } : item)\n      });\n    } else {\n      set({\n        cart: [...cart, {\n          ...product,\n          quantity\n        }]\n      });\n    }\n    get().updateCartTotal();\n  },\n  // Remove from cart\n  removeFromCart: productId => {\n    const {\n      cart\n    } = get();\n    set({\n      cart: cart.filter(item => item.id !== productId)\n    });\n    get().updateCartTotal();\n  },\n  // Update cart item quantity\n  updateCartItemQuantity: (productId, quantity) => {\n    const {\n      cart\n    } = get();\n    if (quantity <= 0) {\n      get().removeFromCart(productId);\n      return;\n    }\n    set({\n      cart: cart.map(item => item.id === productId ? {\n        ...item,\n        quantity\n      } : item)\n    });\n    get().updateCartTotal();\n  },\n  // Update cart total\n  updateCartTotal: () => {\n    const {\n      cart\n    } = get();\n    const total = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);\n    set({\n      cartTotal: total\n    });\n  },\n  // Clear cart\n  clearCart: () => {\n    set({\n      cart: [],\n      cartTotal: 0\n    });\n  },\n  // Toggle view mode\n  toggleViewMode: () => {\n    const {\n      viewMode\n    } = get();\n    set({\n      viewMode: viewMode === 'grid' ? 'list' : 'grid'\n    });\n  },\n  // Set view mode\n  setViewMode: mode => {\n    set({\n      viewMode: mode\n    });\n  },\n  // Search and filter actions\n  setSearchQuery: query => {\n    set({\n      searchQuery: query\n    });\n  },\n  setSelectedCategory: category => {\n    set({\n      selectedCategory: category\n    });\n  },\n  setPriceRange: range => {\n    set({\n      priceRange: range\n    });\n  },\n  setSortBy: sortBy => {\n    set({\n      sortBy\n    });\n  },\n  // Get cart item count\n  getCartItemCount: () => {\n    const {\n      cart\n    } = get();\n    return cart.reduce((count, item) => count + item.quantity, 0);\n  },\n  // Get cart item by ID\n  getCartItem: productId => {\n    const {\n      cart\n    } = get();\n    return cart.find(item => item.id === productId);\n  }\n}), {\n  name: 'ecommerce-store',\n  partialize: state => ({\n    cart: state.cart,\n    cartTotal: state.cartTotal,\n    viewMode: state.viewMode,\n    searchQuery: state.searchQuery,\n    selectedCategory: state.selectedCategory,\n    priceRange: state.priceRange,\n    sortBy: state.sortBy\n  })\n}));\nexport default useStore;","map":{"version":3,"names":["create","persist","useStore","set","get","cart","cartTotal","viewMode","searchQuery","selectedCategory","priceRange","sortBy","addToCart","product","quantity","existingItem","find","item","id","map","updateCartTotal","removeFromCart","productId","filter","updateCartItemQuantity","total","reduce","sum","price","clearCart","toggleViewMode","setViewMode","mode","setSearchQuery","query","setSelectedCategory","category","setPriceRange","range","setSortBy","getCartItemCount","count","getCartItem","name","partialize","state"],"sources":["/Users/kumarmadhurendra/Downloads/ecom9/src/store/useStore.js"],"sourcesContent":["import { create } from 'zustand';\r\nimport { persist } from 'zustand/middleware';\r\n\r\nconst useStore = create(\r\n  persist(\r\n    (set, get) => ({\r\n      // Cart state\r\n      cart: [],\r\n      cartTotal: 0,\r\n      \r\n      // Product view preferences\r\n      viewMode: 'grid', // 'grid' or 'list'\r\n      \r\n      // Search and filters\r\n      searchQuery: '',\r\n      selectedCategory: 'all',\r\n      priceRange: [0, 25000],\r\n      sortBy: 'name',\r\n      \r\n      // Add to cart\r\n      addToCart: (product, quantity = 1) => {\r\n        const { cart } = get();\r\n        const existingItem = cart.find(item => item.id === product.id);\r\n        \r\n        if (existingItem) {\r\n          set({\r\n            cart: cart.map(item =>\r\n              item.id === product.id\r\n                ? { ...item, quantity: item.quantity + quantity }\r\n                : item\r\n            )\r\n          });\r\n        } else {\r\n          set({\r\n            cart: [...cart, { ...product, quantity }]\r\n          });\r\n        }\r\n        \r\n        get().updateCartTotal();\r\n      },\r\n      \r\n      // Remove from cart\r\n      removeFromCart: (productId) => {\r\n        const { cart } = get();\r\n        set({\r\n          cart: cart.filter(item => item.id !== productId)\r\n        });\r\n        get().updateCartTotal();\r\n      },\r\n      \r\n      // Update cart item quantity\r\n      updateCartItemQuantity: (productId, quantity) => {\r\n        const { cart } = get();\r\n        if (quantity <= 0) {\r\n          get().removeFromCart(productId);\r\n          return;\r\n        }\r\n        \r\n        set({\r\n          cart: cart.map(item =>\r\n            item.id === productId ? { ...item, quantity } : item\r\n          )\r\n        });\r\n        get().updateCartTotal();\r\n      },\r\n      \r\n      // Update cart total\r\n      updateCartTotal: () => {\r\n        const { cart } = get();\r\n        const total = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);\r\n        set({ cartTotal: total });\r\n      },\r\n      \r\n      // Clear cart\r\n      clearCart: () => {\r\n        set({ cart: [], cartTotal: 0 });\r\n      },\r\n      \r\n      // Toggle view mode\r\n      toggleViewMode: () => {\r\n        const { viewMode } = get();\r\n        set({ viewMode: viewMode === 'grid' ? 'list' : 'grid' });\r\n      },\r\n      \r\n      // Set view mode\r\n      setViewMode: (mode) => {\r\n        set({ viewMode: mode });\r\n      },\r\n      \r\n      // Search and filter actions\r\n      setSearchQuery: (query) => {\r\n        set({ searchQuery: query });\r\n      },\r\n      \r\n      setSelectedCategory: (category) => {\r\n        set({ selectedCategory: category });\r\n      },\r\n      \r\n      setPriceRange: (range) => {\r\n        set({ priceRange: range });\r\n      },\r\n      \r\n      setSortBy: (sortBy) => {\r\n        set({ sortBy });\r\n      },\r\n      \r\n      // Get cart item count\r\n      getCartItemCount: () => {\r\n        const { cart } = get();\r\n        return cart.reduce((count, item) => count + item.quantity, 0);\r\n      },\r\n      \r\n      // Get cart item by ID\r\n      getCartItem: (productId) => {\r\n        const { cart } = get();\r\n        return cart.find(item => item.id === productId);\r\n      }\r\n    }),\r\n    {\r\n      name: 'ecommerce-store',\r\n      partialize: (state) => ({\r\n        cart: state.cart,\r\n        cartTotal: state.cartTotal,\r\n        viewMode: state.viewMode,\r\n        searchQuery: state.searchQuery,\r\n        selectedCategory: state.selectedCategory,\r\n        priceRange: state.priceRange,\r\n        sortBy: state.sortBy\r\n      })\r\n    }\r\n  )\r\n);\r\n\r\nexport default useStore; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}